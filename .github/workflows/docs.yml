name: Build and Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**/README.md'
      - 'site/**'
      - 'scripts/build-docs.js'
      - 'scripts/generate-llms-txt.js'
      - 'package.json'
      - 'README.md'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**/README.md'
      - 'site/**'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: |
          gem install jekyll bundler
          cd site
          bundle init
          echo 'gem "jekyll", "~> 4.3"' >> Gemfile
          echo 'gem "minima", "~> 2.5"' >> Gemfile
          echo 'gem "jekyll-feed", "~> 0.12"' >> Gemfile
          echo 'gem "jekyll-sitemap", "~> 1.4"' >> Gemfile
          echo 'gem "jekyll-seo-tag", "~> 2.8"' >> Gemfile
          bundle install

      - name: Build documentation
        run: |
          echo "🔧 Running documentation build scripts..."
          node scripts/build-docs.js
          node scripts/generate-llms-txt.js

      - name: Build with Jekyll
        run: |
          echo "🏗️ Building Jekyll site..."
          cd site
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}" --destination ../_site
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4