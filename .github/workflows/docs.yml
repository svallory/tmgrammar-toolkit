name: Build and Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**/README.md'
      - 'apps/site/**'
      - 'scripts/**'
      - 'package.json'
      - 'README.md'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**/README.md'
      - 'apps/site/**'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install root dependencies
        run: bun install

      - name: Install site dependencies
        working-directory: ./apps/site
        run: bun install

      - name: Generate LLMs.txt files
        run: |
          echo "üîß Generating LLMs.txt files..."
          node scripts/generate-llms-txt.js

      - name: Build Astro site
        working-directory: ./apps/site
        run: |
          echo "üèóÔ∏è Building Astro site..."
          echo "Site URL: ${{ steps.pages.outputs.origin }}"
          echo "Base path: ${{ steps.pages.outputs.base_path }}"
          bun run build
        env:
          SITE: ${{ steps.pages.outputs.origin }}
          BASE: ${{ steps.pages.outputs.base_path }}

      - name: Ensure LLMs.txt files are in build output
        run: |
          echo "üìÑ Ensuring LLMs.txt files are in the build output..."
          if [ -f "apps/site/public/llms.txt" ]; then
            cp apps/site/public/llms.txt apps/site/dist/
            echo "‚úÖ Copied llms.txt"
          fi
          if [ -f "apps/site/public/llms-full.txt" ]; then
            cp apps/site/public/llms-full.txt apps/site/dist/
            echo "‚úÖ Copied llms-full.txt"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./apps/site/dist

  deploy:
    name: Deploy to GitHub Pages
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4